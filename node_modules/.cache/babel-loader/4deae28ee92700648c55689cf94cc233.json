{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport router from '../router';\nimport { APIService } from '../http/APIService';\nconst apiService = new APIService();\nexport default {\n  name: 'Register',\n  data: () => ({\n    credentials: {},\n    password: \"\",\n    repassword: \"\",\n    valid: true,\n    showMsg: '',\n    loading: false,\n    rules: {\n      username: [v => !!v || \"Username is required\", v => v && v.length > 3 || \"A username must be more than 3 characters long\", v => /^[a-z0-9_]+$/.test(v) || \"A username can only contain letters and digits\"],\n      password: [v => !!v || \"Password is required\", v => v && v.length > 7 || \"The password must be longer than 7 characters\"],\n      email: [v => !!v || \"Email is required\"],\n      repassword: [v => v == this.password || 'Passwords must match']\n    },\n    showPassword: false\n  }),\n  methods: {\n    register() {\n      apiService.registerUser(this.credentials).then(response => {\n        if (response.status === 201) {\n          this.movie = response.data;\n          this.showMsg = \"\";\n          router.push('/auth/');\n        } else {\n          this.showMsg = \"error\";\n        }\n      }).catch(error => {\n        if (error.response.status === 401) {\n          router.push(\"/auth\");\n        } else if (error.response.status === 400) {\n          this.showMsg = \"error\";\n        }\n      });\n    }\n\n  },\n  computed: {\n    passwordConfirmationRule() {\n      return this.password === this.repassword || 'Password must match';\n    }\n\n  }\n};","map":{"version":3,"mappings":";AAsFA,OAAOA,MAAP,MAAmB,WAAnB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,MAAMC,UAAS,GAAI,IAAID,UAAJ,EAAnB;AAEA,eAAe;EACXE,IAAI,EAAE,UADK;EAGXC,IAAI,EAAE,OAAO;IACTC,WAAW,EAAE,EADJ;IAETC,QAAQ,EAAE,EAFD;IAGTC,UAAU,EAAE,EAHH;IAITC,KAAK,EAAE,IAJE;IAKTC,OAAO,EAAE,EALA;IAMTC,OAAO,EAAE,KANA;IAOTC,KAAK,EAAE;MACHC,QAAQ,EAAE,CACNC,KAAK,CAAC,CAACA,CAAF,IAAO,sBADN,EAENA,KAAMA,KAAKA,CAAC,CAACC,MAAF,GAAW,CAAjB,IAAuB,gDAFtB,EAGND,KAAK,eAAeE,IAAf,CAAoBF,CAApB,KAA0B,gDAHzB,CADP;MAKAP,QAAQ,EAAE,CACTO,KAAK,CAAC,CAACA,CAAF,IAAO,sBADH,EAETA,KAAMA,KAAKA,CAAC,CAACC,MAAF,GAAW,CAAjB,IAAuB,+CAFnB,CALV;MAQAE,KAAK,EAAE,CACNH,KAAK,CAAC,CAACA,CAAF,IAAO,mBADN,CARP;MAUHN,UAAU,EAAE,CACRM,KAAMA,KAAK,KAAKP,QAAX,IAAwB,sBADrB;IAVT,CAPE;IAqBTW,YAAY,EAAE;EArBL,CAAP,CAHK;EA0BXC,OAAO,EAAE;IACLC,QAAQ,GAAG;MAEPjB,UAAU,CAACkB,YAAX,CAAwB,KAAKf,WAA7B,EAA0CgB,IAA1C,CAA+CC,QAAO,IAAK;QACvD,IAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;UACzB,KAAKC,KAAL,GAAaF,QAAQ,CAAClB,IAAtB;UACA,KAAKK,OAAL,GAAe,EAAf;UACAT,MAAM,CAACyB,IAAP,CAAY,QAAZ;QACJ,CAJA,MAIO;UACH,KAAKhB,OAAL,GAAe,OAAf;QACJ;MACH,CARD,EAQGiB,KARH,CAQSC,KAAI,IAAK;QACd,IAAIA,KAAK,CAACL,QAAN,CAAeC,MAAf,KAA0B,GAA9B,EAAmC;UAC/BvB,MAAM,CAACyB,IAAP,CAAY,OAAZ;QACJ,CAFA,MAEO,IAAIE,KAAK,CAACL,QAAN,CAAeC,MAAf,KAA0B,GAA9B,EAAmC;UACtC,KAAKd,OAAL,GAAe,OAAf;QACJ;MACH,CAdD;IAeH;;EAlBI,CA1BE;EA8CXmB,QAAQ,EAAE;IACNC,wBAAwB,GAAG;MACvB,OAAQ,KAAKvB,QAAL,KAAkB,KAAKC,UAAxB,IAAuC,qBAA9C;IACJ;;EAHM;AA9CC,CAAf","names":["router","APIService","apiService","name","data","credentials","password","repassword","valid","showMsg","loading","rules","username","v","length","test","email","showPassword","methods","register","registerUser","then","response","status","movie","push","catch","error","computed","passwordConfirmationRule"],"sourceRoot":"","sources":["/Users/sharonsotunde-adesina/movie-fe/src/components/Register.vue"],"sourcesContent":["<template>\n    <div class=\"container-fluid\">\n        <div class=\"row align-items-center justify-content-center\">\n            <div class=\"col col-12 col-sm-6 col-md-10 col-lg-6\">\n                <div class=\"card\">\n                    <div class=\"card-header\">Register</div>\n                    <div v-if=\"showMsg === 'error'\" class=\"alert alert-danger\" role=\"alert\">\n                        Invalid username or password. Please Try again.\n                    </div>\n                    <div class=\"p-2\"> </div>\n\n                    <div class=\"card-body\">\n                        <div class=\"row align-items-center justify-content-center\" v-if=\"loading\">\n                            <!-- Creating the progress bar -->\n                            <div class=\"progress\">\n                                <div class=\" \n                            progress-bar progress-bar-striped progress-bar-animated \n                            \" role=\"progressbar\" aria-valuenow=\"75\" aria-valuemin=\"0\" aria-valuemax=\"100\"\n                                    style=\"width: 75%\"></div>\n                            </div>\n                        </div>\n                        <!-- Input Field Section -->\n                        <form v-else ref=\"form\">\n                            <div class=\"container-fuild\">\n\n                                <div class=\"form-group row justify-content-left py-2\">\n                                    <label class=\"col-4\">Username</label>\n                                    <div class=\"col-8\">\n                                        <input name=\"username\" v-model=\"credentials.username\" type=\"text\"\n                                            class=\"form-control-sm form-control\">\n                                    </div>\n                                </div>\n                            </div>\n                                <div class=\"form-group row justify-content-end py-2\">\n                                    <label class=\"col-4\">Password</label>\n                                    <div class=\"col col-8\">\n                                        <input v-model=\"credentials.password\" type=\"password\"\n                                            class=\"form-control-sm form-control\">\n                                    </div>\n\n                                    <div class=\"form-group row justify-content-left py-2\">\n                                        <label class=\"col-4\">Re-enter password</label>\n                                        <div class=\"col col-8\">\n                                            <input v-model=\"credentials.password2\" type=\"password\"\n                                                class=\"form-control-sm form-control\">\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group row justify-content-left py-2\">\n                                        <label class=\"col-4\">Email</label>\n                                        <div class=\"col col-8\">\n                                            <input v-model=\"credentials.email\" type=\"email\"\n                                                class=\"form-control-sm form-control\">\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group row justify-content-left py-2\">\n                                        <label class=\"col-4\">First Name</label>\n                                        <div class=\"col col-8\">\n                                            <input v-model=\"credentials.first_name\" type=\"text\"\n                                                class=\"form-control-sm form-control\">\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group row justify-content-left py-2\">\n                                        <label class=\"col-4\">Last Name</label>\n                                        <div class=\"col col-8\">\n                                            <input v-model=\"credentials.last_name\" type=\"text\"\n                                                class=\"form-control-sm form-control\">\n                                        </div>\n                                    </div>\n                                    <div class=\"row justify-content-around\">\n                                        <div type=\"button\" class=\"btn btn-secondary col-6\" @click=\"login\">Back to Login\n                                        </div>\n                                        <div type=\"button\" class=\"btn btn-primary col-4\" @click=\"register\">Register\n                                        </div>\n                                    </div>\n                                </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    </div>\n</template>\n\n<script>\n\nimport router from '../router';\nimport { APIService } from '../http/APIService';\nconst apiService = new APIService();\n\nexport default {\n    name: 'Register',\n\n    data: () => ({\n        credentials: {},\n        password: \"\",\n        repassword: \"\",\n        valid: true,\n        showMsg: '',\n        loading: false,\n        rules: {\n            username: [\n                v => !!v || \"Username is required\",\n                v => (v && v.length > 3) || \"A username must be more than 3 characters long\",\n                v => /^[a-z0-9_]+$/.test(v) || \"A username can only contain letters and digits\"\n            ], password: [\n                v => !!v || \"Password is required\",\n                v => (v && v.length > 7) || \"The password must be longer than 7 characters\"\n            ], email: [\n                v => !!v || \"Email is required\"],\n            repassword: [\n                v => (v == this.password) || 'Passwords must match'\n            ]\n        },\n        showPassword: false,\n    }),\n    methods: {\n        register() {\n\n            apiService.registerUser(this.credentials).then(response => {\n                if (response.status === 201) {\n                    this.movie = response.data;\n                    this.showMsg = \"\";\n                    router.push('/auth/');\n                } else {\n                    this.showMsg = \"error\";\n                }\n            }).catch(error => {\n                if (error.response.status === 401) {\n                    router.push(\"/auth\");\n                } else if (error.response.status === 400) {\n                    this.showMsg = \"error\";\n                }\n            });\n        },\n    },\n    computed: {\n        passwordConfirmationRule() {\n            return (this.password === this.repassword) || 'Password must match'\n        }\n    }\n} \n</script>"]},"metadata":{},"sourceType":"module"}