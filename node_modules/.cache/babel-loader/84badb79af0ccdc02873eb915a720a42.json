{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport router from \"./router\";\nimport { APIService } from \"./http/APIService\";\nconst apiService = new APIService();\nexport default {\n  name: 'App',\n  props: {\n    msg: String\n  },\n  data: () => ({\n    authenticated: false,\n    dialog: false,\n    uName: \"Guest\",\n    menu: []\n  }),\n\n  mounted() {\n    this.fillMenu();\n    apiService.getMovieList().then(response => {\n      this.authenticated = true;\n    }).catch(error => {\n      if (error.response.status === 401) {\n        localStorage.removeItem(\"isAuthenticates\");\n        localStorage.removeItem(\"log_user\");\n        localStorage.removeItem(\"token\");\n        this.authenticated = false;\n      }\n    });\n    console.log(\"this.authenticated--\" + this.authenticated);\n  },\n\n  methods: {\n    fillMenu() {\n      if (localStorage.getItem(\"isAuthenticates\") && JSON.parse(localStorage.getItem(\"isAuthenticates\")) === true) {\n        console.log(\"IS AUTH\");\n        this.uName = JSON.parse(localStorage.getItem(\"log_user\"));\n      } else {\n        console.log(\"IS NOT AUTH\");\n      }\n\n      this.menu = [{\n        title: \"Movies\",\n        url: \"/movie-list\"\n      }];\n    },\n\n    getUser() {\n      if (localStorage.getItem(\"isAuthenticates\") && JSON.parse(localStorage.getItem(\"isAuthenticates\")) === true) {\n        console.log(\"IS AUTH\");\n        this.validUserName = JSON.parse(localStorage.getItem(\"log_user\"));\n      } else {\n        console.log(\"IS NOT AUTH\");\n      }\n    },\n\n    logout() {\n      localStorage.removeItem(\"isAuthenticates\");\n      localStorage.removeItem(\"log_user\");\n      localStorage.removeItem(\"token\");\n      this.authenticated = false; // router.push('/'); \n\n      window.location = \"/\";\n    },\n\n    home() {\n      window.location = \"/\";\n    },\n\n    register() {\n      router.push(\"/register\");\n    },\n\n    login() {\n      router.push(\"/auth\");\n    }\n\n  }\n};","map":{"version":3,"mappings":";AAyBA,OAAOA,MAAP,MAAmB,UAAnB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,MAAMC,UAAS,GAAI,IAAID,UAAJ,EAAnB;AAEA,eAAe;EACbE,IAAI,EAAE,KADO;EAEbC,KAAK,EAAE;IACLC,GAAG,EAAEC;EADA,CAFM;EAKbC,IAAI,EAAE,OAAO;IACXC,aAAa,EAAE,KADJ;IAEXC,MAAM,EAAE,KAFG;IAGXC,KAAK,EAAE,OAHI;IAIXC,IAAI,EAAE;EAJK,CAAP,CALO;;EAWbC,OAAO,GAAG;IACR,KAAKC,QAAL;IACAX,UAAS,CACNY,YADH,GAEGC,IAFH,CAESC,QAAD,IAAc;MAClB,KAAKR,aAAL,GAAqB,IAArB;IACD,CAJH,EAKGS,KALH,CAKUC,KAAD,IAAW;MAChB,IAAIA,KAAK,CAACF,QAAN,CAAeG,MAAf,KAA0B,GAA9B,EAAmC;QACjCC,YAAY,CAACC,UAAb,CAAwB,iBAAxB;QACAD,YAAY,CAACC,UAAb,CAAwB,UAAxB;QACAD,YAAY,CAACC,UAAb,CAAwB,OAAxB;QACA,KAAKb,aAAL,GAAqB,KAArB;MACF;IACD,CAZH;IAaAc,OAAO,CAACC,GAAR,CAAY,yBAAyB,KAAKf,aAA1C;EACD,CA3BY;;EA4BbgB,OAAO,EAAE;IACPX,QAAQ,GAAG;MACT,IACEO,YAAY,CAACK,OAAb,CAAqB,iBAArB,KACAC,IAAI,CAACC,KAAL,CAAWP,YAAY,CAACK,OAAb,CAAqB,iBAArB,CAAX,MAAwD,IAF1D,EAGE;QACAH,OAAO,CAACC,GAAR,CAAY,SAAZ;QACA,KAAKb,KAAL,GAAagB,IAAI,CAACC,KAAL,CAAWP,YAAY,CAACK,OAAb,CAAqB,UAArB,CAAX,CAAb;MACF,CANA,MAMO;QAAEH,OAAO,CAACC,GAAR,CAAY,aAAZ;MAA4B;;MAAE,KAAKZ,IAAL,GAAY,CAAC;QAAEiB,KAAK,EAAE,QAAT;QAAmBC,GAAG,EAAE;MAAxB,CAAD,CAAZ;IACxC,CATM;;IAUPC,OAAO,GAAG;MACR,IACEV,YAAY,CAACK,OAAb,CAAqB,iBAArB,KACAC,IAAI,CAACC,KAAL,CAAWP,YAAY,CAACK,OAAb,CAAqB,iBAArB,CAAX,MAAwD,IAF1D,EAGE;QACAH,OAAO,CAACC,GAAR,CAAY,SAAZ;QACA,KAAKQ,aAAL,GAAqBL,IAAI,CAACC,KAAL,CAAWP,YAAY,CAACK,OAAb,CAAqB,UAArB,CAAX,CAArB;MACF,CANA,MAMO;QACLH,OAAO,CAACC,GAAR,CAAY,aAAZ;MACF;IACD,CApBM;;IAqBPS,MAAM,GAAG;MACPZ,YAAY,CAACC,UAAb,CAAwB,iBAAxB;MACAD,YAAY,CAACC,UAAb,CAAwB,UAAxB;MACAD,YAAY,CAACC,UAAb,CAAwB,OAAxB;MACA,KAAKb,aAAL,GAAqB,KAArB,CAJO,CAKP;;MACAyB,MAAM,CAACC,QAAP,GAAkB,GAAlB;IACD,CA5BM;;IA6BPC,IAAI,GAAG;MACLF,MAAM,CAACC,QAAP,GAAkB,GAAlB;IACD,CA/BM;;IAgCPE,QAAQ,GAAG;MACTpC,MAAM,CAACqC,IAAP,CAAY,WAAZ;IACD,CAlCM;;IAmCPC,KAAK,GAAG;MACNtC,MAAM,CAACqC,IAAP,CAAY,OAAZ;IACD;;EArCM;AA5BI,CAAf","names":["router","APIService","apiService","name","props","msg","String","data","authenticated","dialog","uName","menu","mounted","fillMenu","getMovieList","then","response","catch","error","status","localStorage","removeItem","console","log","methods","getItem","JSON","parse","title","url","getUser","validUserName","logout","window","location","home","register","push","login"],"sourceRoot":"","sources":["/Users/sharonsotunde-adesina/movie-fe/src/App.vue"],"sourcesContent":["<template>\n\n  <ul class=\"nav justify-content-center\">\n    <li class=\"nav-item active\">\n      <router-link to=\"/\">Home</router-link> |\n    </li>\n    <li class=\"nav-item\">\n      <router-link :to=\"{name: 'MovieList'}\">Movies</router-link>\n    </li>\n    <li class=\"nav-item\" v-if=\"!authenticated\" @click=\"login\"> |\n      <router-link :to=\"{name: 'Auth'}\">Log in</router-link>\n    </li>\n    <li class=\"nav-item\" v-if=\"!authenticated\" @click=\"register\"> |\n      <router-link :to=\"{name: 'Register'}\">Register</router-link>\n    </li>\n    <li class=\"nav-item .justify-content-end\" v-if=\"authenticated\" @click=\"logout\"> |\n      <router-link :to=\"{name: 'Auth'}\">Logout</router-link>\n    </li>\n  </ul>\n\n  <router-view />\n</template> \n\n<script>\n\nimport router from \"./router\";\nimport { APIService } from \"./http/APIService\";\nconst apiService = new APIService();\n\nexport default {\n  name: 'App',\n  props: {\n    msg: String\n  },\n  data: () => ({\n    authenticated: false,\n    dialog: false,\n    uName: \"Guest\",\n    menu: [],\n  }),\n  mounted() {\n    this.fillMenu();\n    apiService\n      .getMovieList()\n      .then((response) => {\n        this.authenticated = true;\n      })\n      .catch((error) => {\n        if (error.response.status === 401) {\n          localStorage.removeItem(\"isAuthenticates\");\n          localStorage.removeItem(\"log_user\");\n          localStorage.removeItem(\"token\");\n          this.authenticated = false;\n        }\n      });\n    console.log(\"this.authenticated--\" + this.authenticated);\n  },\n  methods: {\n    fillMenu() {\n      if (\n        localStorage.getItem(\"isAuthenticates\") &&\n        JSON.parse(localStorage.getItem(\"isAuthenticates\")) === true\n      ) {\n        console.log(\"IS AUTH\");\n        this.uName = JSON.parse(localStorage.getItem(\"log_user\"));\n      } else { console.log(\"IS NOT AUTH\"); } this.menu = [{ title: \"Movies\", url: \"/movie-list\" }];\n    },\n    getUser() {\n      if (\n        localStorage.getItem(\"isAuthenticates\") &&\n        JSON.parse(localStorage.getItem(\"isAuthenticates\")) === true\n      ) {\n        console.log(\"IS AUTH\");\n        this.validUserName = JSON.parse(localStorage.getItem(\"log_user\"));\n      } else {\n        console.log(\"IS NOT AUTH\");\n      }\n    },\n    logout() {\n      localStorage.removeItem(\"isAuthenticates\");\n      localStorage.removeItem(\"log_user\");\n      localStorage.removeItem(\"token\");\n      this.authenticated = false;\n      // router.push('/'); \n      window.location = \"/\";\n    },\n    home() {\n      window.location = \"/\";\n    },\n    register() {\n      router.push(\"/register\");\n    },\n    login() {\n      router.push(\"/auth\");\n    },\n  },\n}\n</script>\n  \n<style lang=\"scss\">\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n\n#nav {\n  padding: 30px;\n  background-color: cadetblue;\n\n  a {\n    font-weight: bold;\n    color: #2c3e50;\n\n    &.router-link-exact-active {\n      color: #42b983;\n    }\n  }\n}\n\n.nav {\n  padding: 1em;\n  background-color: cadetblue;\n\n  li {\n    font-weight: bold;\n    color: #2c3e50;\n  }\n\n  a {\n    color: black;\n    padding: .5em;\n\n    &.router-link-exact-active {\n      color: #42b983;\n    }\n  }\n\n\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}