{"ast":null,"code":"import router from \"../router\";\nimport { APIService } from \"../http/APIService\";\nconst apiService = new APIService();\nexport default {\n  name: \"Auth\",\n  data: () => ({\n    credentials: {},\n    valid: true,\n    showMsg: \"\",\n    loading: false,\n    rules: {\n      username: [v => !!v || \"Username is required\", v => v && v.length > 3 || \"A username must be more than 3 characters long\", v => /^[a-z0-9_]+$/.test(v) || \"A username can only contain letters and digits\"],\n      password: [v => !!v || \"Password is required\", v => v && v.length > 7 || \"The password must be longer than 7 characters\"]\n    },\n    showPassword: false\n  }),\n  methods: {\n    login() {\n      // checking if the input is valid \n      console.log(\"IS THIS THING WORKING\");\n\n      if (this.$refs.form) {\n        this.loading = true;\n        apiService.authenticateLogin(this.credentials).then(res => {\n          localStorage.setItem(\"token\", res.data.token);\n          localStorage.setItem(\"isAuthenticates\", JSON.stringify(true));\n          localStorage.setItem(\"log_user\", JSON.stringify(this.credentials.username)); //router.push(\"/\"); \n          //router.go(-1); \n\n          window.location = \"/\";\n        }).catch(e => {\n          this.loading = false;\n          localStorage.removeItem(\"isAuthenticates\");\n          localStorage.removeItem(\"log_user\");\n          localStorage.removeItem(\"token\"); // router.go(-1); \n\n          this.showMsg = \"error\";\n        });\n      }\n    },\n\n    testMethod() {\n      console.log(this.$refs.form);\n      console.log(\"hey\");\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAuDA,OAAOA,MAAP,MAAmB,WAAnB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,MAAMC,UAAS,GAAI,IAAID,UAAJ,EAAnB;AAEA,eAAe;EACXE,IAAI,EAAE,MADK;EAEXC,IAAI,EAAE,OAAO;IACTC,WAAW,EAAE,EADJ;IAETC,KAAK,EAAE,IAFE;IAGTC,OAAO,EAAE,EAHA;IAITC,OAAO,EAAE,KAJA;IAKTC,KAAK,EAAE;MACHC,QAAQ,EAAE,CACLC,CAAD,IAAO,CAAC,CAACA,CAAF,IAAO,sBADR,EAELA,CAAD,IAAQA,KAAKA,CAAC,CAACC,MAAF,GAAW,CAAjB,IAAuB,gDAFxB,EAGLD,CAAD,IAAO,eAAeE,IAAf,CAAoBF,CAApB,KAA0B,gDAH3B,CADP;MAMHG,QAAQ,EAAE,CACLH,CAAD,IAAO,CAAC,CAACA,CAAF,IAAO,sBADR,EAELA,CAAD,IAAQA,KAAKA,CAAC,CAACC,MAAF,GAAW,CAAjB,IAAuB,+CAFxB;IANP,CALE;IAgBTG,YAAY,EAAE;EAhBL,CAAP,CAFK;EAoBXC,OAAO,EAAE;IACLC,KAAK,GAAG;MACJ;MACAC,OAAO,CAACC,GAAR,CAAY,uBAAZ;;MACA,IAAI,KAAKC,KAAL,CAAWC,IAAf,EAAqB;QACjB,KAAKb,OAAL,GAAe,IAAf;QACAN,UAAS,CACJoB,iBADL,CACuB,KAAKjB,WAD5B,EAEKkB,IAFL,CAEWC,GAAD,IAAS;UACXC,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,GAAG,CAACpB,IAAJ,CAASuB,KAAvC;UACAF,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwCE,IAAI,CAACC,SAAL,CAAe,IAAf,CAAxC;UACAJ,YAAY,CAACC,OAAb,CACI,UADJ,EAEIE,IAAI,CAACC,SAAL,CAAe,KAAKxB,WAAL,CAAiBK,QAAhC,CAFJ,EAHW,CAOX;UACA;;UACAoB,MAAM,CAACC,QAAP,GAAkB,GAAlB;QACH,CAZL,EAaKC,KAbL,CAaYC,CAAD,IAAO;UACV,KAAKzB,OAAL,GAAe,KAAf;UACAiB,YAAY,CAACS,UAAb,CAAwB,iBAAxB;UACAT,YAAY,CAACS,UAAb,CAAwB,UAAxB;UACAT,YAAY,CAACS,UAAb,CAAwB,OAAxB,EAJU,CAKV;;UACA,KAAK3B,OAAL,GAAe,OAAf;QACH,CApBL;MAqBJ;IACH,CA5BI;;IA6BL4B,UAAU,GAAG;MACTjB,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,IAAvB;MACAH,OAAO,CAACC,GAAR,CAAY,KAAZ;IACH;;EAhCI;AApBE,CAAf","names":["router","APIService","apiService","name","data","credentials","valid","showMsg","loading","rules","username","v","length","test","password","showPassword","methods","login","console","log","$refs","form","authenticateLogin","then","res","localStorage","setItem","token","JSON","stringify","window","location","catch","e","removeItem","testMethod"],"sourceRoot":"","sources":["/Users/sharonsotunde-adesina/movie-fe/src/components/Auth.vue"],"sourcesContent":["<template>\n    `\n    <div class=\"container\">\n        <div class=\"row align-items-center justify-content-center\">\n            <div class=\"col-12 col-sm-6 col-md-4 col-lg-4\">\n                <div class=\"card mx-auto shadow\">\n                    <div class=\"card-body\">\n                        <div class=\"card-title\"><span>Login</span></div>\n                        <div v-if=\"showMsg === 'error'\" close-icon=\"mdi-close-circle\" :value=\"true\"\n                            class=\"alert alert-danger\" role=\"alert\" dense>\n                            Invalid username or password. Please Try again.\n                        </div>\n                        <div class=\"card-text pt-2\">\n\n                            <div class=\"row align-items-center justify-content-center\" v-if=\"loading\">\n                                <div class=\"progress\">\n                                    <div class=\" \n                progress-bar progress-bar-striped progress-bar-animated \n                \" role=\"progressbar\" aria-valuenow=\"75\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 75%\"></div>\n                                </div>\n                            </div>\n\n                            <div class=\"col-md-10 mb-3\">\n                                <div class=\"input-group\">\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\">@</span>\n                                    </div>\n                                    <input v-model=\"credentials.username\" :counter=\"70\" label=\"Username\"\n                                        :rules=\"rules.username\" maxlength=\"70\" required type=\"text\"\n                                        class=\"form-control mb-3\" placeholder=\"Username\"\n                                        aria-describedby=\"inputGroupPrepend2\" />\n\n                                    <div class=\"w-100\"></div>\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\">***</span>\n                                    </div>\n                                    <input :type=\"showPassword ? 'text' : 'Password'\" v-model=\"credentials.password\"\n                                        label=\"Password\" :rules=\"rules.password\" maxlength=\"20\" required\n                                        :append-icon=\"showPassword ? 'mdi-eye' : 'mdi-eye-off'\"\n                                        @click:append=\"showPassword = ! showPassword\" class=\"form-control\"\n                                        placeholder=\"Password\" aria-describedby=\"inputGroupPrepend2\" />\n                                </div>\n                            </div>\n\n                            <button ref=\"form\" @click.prevent=\"login\" class=\"btn btn-primary\">Login</button>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div> `\n</template> \n\n<script>\nimport router from \"../router\";\nimport { APIService } from \"../http/APIService\";\nconst apiService = new APIService();\n\nexport default {\n    name: \"Auth\",\n    data: () => ({\n        credentials: {},\n        valid: true,\n        showMsg: \"\",\n        loading: false,\n        rules: {\n            username: [\n                (v) => !!v || \"Username is required\",\n                (v) => (v && v.length > 3) || \"A username must be more than 3 characters long\",\n                (v) => /^[a-z0-9_]+$/.test(v) || \"A username can only contain letters and digits\",\n            ],\n            password: [\n                (v) => !!v || \"Password is required\",\n                (v) => (v && v.length > 7) || \"The password must be longer than 7 characters\",\n            ],\n        },\n        showPassword: false,\n    }),\n    methods: {\n        login() {\n            // checking if the input is valid \n            console.log(\"IS THIS THING WORKING\")\n            if (this.$refs.form) {\n                this.loading = true;\n                apiService\n                    .authenticateLogin(this.credentials)\n                    .then((res) => {\n                        localStorage.setItem(\"token\", res.data.token);\n                        localStorage.setItem(\"isAuthenticates\", JSON.stringify(true));\n                        localStorage.setItem(\n                            \"log_user\",\n                            JSON.stringify(this.credentials.username)\n                        );\n                        //router.push(\"/\"); \n                        //router.go(-1); \n                        window.location = \"/\";\n                    })\n                    .catch((e) => {\n                        this.loading = false;\n                        localStorage.removeItem(\"isAuthenticates\");\n                        localStorage.removeItem(\"log_user\");\n                        localStorage.removeItem(\"token\");\n                        // router.go(-1); \n                        this.showMsg = \"error\";\n                    });\n            }\n        },\n        testMethod() {\n            console.log(this.$refs.form);\n            console.log(\"hey\");\n        },\n    },\n}; \n</script>\n    \n<style>\ninput {\n     padding: 1rem;\n }\n\n form {\n     display: flex;\n     justify-content: center;\n     flex-direction: vertical;\n }\n</style>"]},"metadata":{},"sourceType":"module"}